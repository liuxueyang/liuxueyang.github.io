---
layout: post
title: "sdutoj 1546. Fight Club"
date: 2020-06-23 00:10:27 +0800
tags: ACM/ICPC algorithm DP
---

```
Fight Club

Description

Fight club is an organization where you release your pressure and
emotion by fighting the other club members. The fight begins like
this: n people standing in a circle. Then two adjacent guys are chosen
to fight. The winner will stay and the loser will be sent to the
hospital(there is no tie in the fighting). The cruel fight continues
until there is only one left.

It is somewhat strange to see that when two guys fight each other, the
result is always definite, and you know the result of every pair of
fighters. Thouth they enjoy fighting, they still want to be the
winner. You are to tell each of them, if the fight is arranged
properly, can he be the winner.

Input
First line contains integer T(T<=5), the number of test cases.

For each test case, the first line contains n(1<=n<=40), the number of
people. Following is the description of a n*n matrix A. Following n
lines each contains n '0' or '1', separeted by a single blank. The ith
number in jth line indicates the fighting result of ith and jth
fighter. If it is '1', then the ith fighter will always beat the jth
fighter, otherwise he will always lose. You can safely assume that aij
and aji are different and aii=0 for every distinct i and j. The people
are numbered counterclockwise.

Output

For each test case, output n lines. If the ith fighter can be the
survivor, output 1, otherwise output 0.

Output a blank line after each test case.

Sample

Input

2

2
0 1
0 0

3
0 1 1
0 0 1
0 0 0

Output

1
0

1
0
0
```

[Fight Club](https://acm.sdut.edu.cn/onlinejudge3/problems/1546)

多阶段决策过程，是动态规划的第二个动机。

判断某个人`x`是否能够留下来，把环看成链，同时把`x`拆成两个，如果两端的`x`能够相遇，那么`x`可以留下来。转化成链中的任意两个人是否可以相遇，如果存在中间某个人可以和这两个人相遇，并且中间的这个人比给定的两个人中的一个弱，那么这两个人可以相遇。

```cpp
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long LL;
const int N = 100;
int a[N][N], b[N];
bool d[N][N], res[N];

int main() {

  #ifdef DEBUG
  freopen("sdoj1546.in", "r", stdin);
  #endif
  int T;
  cin >> T;
  for (int tt = 0; tt < T; tt++) {
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) {
      res[i] = false;
      for (int j = 1; j <= n; j++) {
        cin >> a[i][j];
      }
    }

    for (int _i = 0; _i < n; _i++) {
      int b1[N];
      for (int i = 1; i <= n; i++) b[i] = b1[i] = i;
      for (int i = _i + 1, j = 1; i <= n; i++, j++) b[j] = b[i];
      for (int i = 1, j = n - _i + 1; j <= n; i++, j++) b[j] = b1[i];
      b[n+1] = b[1];
      for (int i = 1; i <= n + 1; i++)
        for (int j = 1; j <= n + 1; j++)
          d[i][j] = false;

      for (int len = 1; len <= n; len++) {
        for (int i = n; i >= 1; i--) {
          int j = i + len;
          if (j > n + 1) continue;
          if (len == 1) {
            d[i][j] = d[j][i] = true;
            continue;
          }
          for (int m = i + 1; m < j; m++) {
            if ( (d[j][m] && d[i][m]) &&
                 (a[b[j]][b[m]] || a[b[i]][b[m]])) {
              d[i][j] = d[j][i] = true;
              break;
            }
          }
        }
      }

      if (d[1][n+1]) res[b[1]] = true;
    }

    for (int i = 1; i <= n; i++) {
      cout << (res[i] ? 1 : 0) << endl;
    }

    if (tt != T - 1) cout << endl;
  }

  return 0;
}
```

事实上黑书上的那道题目「决斗」是 NYOJ 上的「NYOJ110 剑客决斗」，然而 [NYOJ](http://acm.nyist.net/JudgeOnline/problem.php?pid=110) 却打不开了，搜了很久才搜到 sdoj 上的这道类似的题目。看来小 OJ 不够靠谱，小 OJ 上的题目以后不能只贴链接了。

我也是通过这篇博客：[ACM: 动态规划题 sicily 1822 《黑书》- 决斗](http://blog.sina.com.cn/s/blog_77dc9e080101d7jl.html)找到的这道题目。
