<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sgu on 黑历史</title>
    <link>http://liuxueyang.github.io/tags/sgu/</link>
    <description>Recent content in Sgu on 黑历史</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 06 Aug 2013 10:27:00 +0000</lastBuildDate>
    
	<atom:link href="http://liuxueyang.github.io/tags/sgu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>sgu259　Printed PR　　　　贪心</title>
      <link>http://liuxueyang.github.io/blog/2013/08/06/sgu259printed-pr%E8%B4%AA%E5%BF%83/</link>
      <pubDate>Tue, 06 Aug 2013 10:27:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2013/08/06/sgu259printed-pr%E8%B4%AA%E5%BF%83/</guid>
      <description>link:http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=259 思路就是贪心． 首先要读懂题目，输入的方式，把样例读懂． 第一，打印的总时间一定．需要做的就是送出的时间尽可能的重合，这样总时间就会更少．所以，送出时间长的要尽可能的先打印，按照送出时间从大到小排序就可以了．
/* * ===================================================================================== * Filename: 259.cpp * Created: 06/08/2013 10:15:09 * Author: liuxueyang (lxy), 1459917536@qq.com * Organization: Hunan University * * ===================================================================================== */ /* ID: zypz4571 LANG: C++ TASK: 259.cpp */ #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cctype&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;list&amp;gt; #define INF 0x3f3f3f3f #define MOD 1000000007 #define LL long long const double eps=1e-9; using namespace std; struct Node{ int t, l; bool operator &amp;lt; (const Node other) const { if (l!</description>
    </item>
    
    <item>
      <title>sgu548 Dragons and Princesses　　　贪心＋优先队列</title>
      <link>http://liuxueyang.github.io/blog/2013/07/18/sgu548-dragons-and-princesses%E8%B4%AA%E5%BF%83%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
      <pubDate>Thu, 18 Jul 2013 17:53:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2013/07/18/sgu548-dragons-and-princesses%E8%B4%AA%E5%BF%83%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</guid>
      <description>题目链接：http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=548 题目意思： 有一个骑士，要经过n个房间，开始在第一个房间，每个房间里面有龙或者公主，遇到龙，可以决定杀或者不杀，如果杀，就可以得到相应的珠宝；如果遇到公主，如果这个骑士此时杀过的龙的数目大于等于公主的美貌值，那么这个骑士必须marry这个公主，不能拒绝．．^_^，但是骑士的真爱是在最后一个房间里面的公主，问骑士能不能到达最后一个房间？如果能的话，求出能够到达最后一个房间的情况下，得到的最大的珠宝数． 做法： 优先队列＋贪心． 遇到龙就杀，用优先队列维护得到的珠宝数目，遇到公主就检查目前的杀的龙的数目是不是大于等于公主的美貌值，如果大于等于，就把有限队列里面珠宝值小的房间出队，直到杀的龙的数目小于美貌值为止．
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstring&amp;gt; using namespace std; struct Node { int pos, n; bool operator &amp;lt; (const Node &amp;amp;other) const { return n &amp;lt; other.n; } }node; int array[200009]; priority_queue&amp;lt;Node&amp;gt; a; char ch[4]; int main(void) { int i, n, tmp, j, sum, cnt; while (~scanf(&amp;quot;%d&amp;quot;, &amp;amp;n)) { sum = 0, cnt = 0, j = 0, i = 2; for (int f = 0; f &amp;lt; n-2; ++f, ++j, ++i) { scanf(&amp;quot;%s%d&amp;quot;, ch, &amp;amp;tmp); node.</description>
    </item>
    
    <item>
      <title>sgu546 Ternary Password</title>
      <link>http://liuxueyang.github.io/blog/2013/07/18/sgu546-ternary-password/</link>
      <pubDate>Thu, 18 Jul 2013 17:42:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2013/07/18/sgu546-ternary-password/</guid>
      <description>题目链接：http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=546 这题还好，１Ｙ，考虑情况周全，就没问题了，还好提交之前把想到的情况都测试了一遍．．
#include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; char s[202]; int n, a, b, a0[202], b0[202]; int main(void) { //freopen(&amp;quot;in.txt&amp;quot;, &amp;quot;r&amp;quot;, stdin); while (~scanf(&amp;quot;%d%d%d%s&amp;quot;, &amp;amp;n, &amp;amp;a, &amp;amp;b, s)) { int a1 = 0, b1 = 0; for (int i = 0;i &amp;lt; n; ++i) { if (s[i] == &#39;0&#39;) a0[a1] = i, a1++; else if (s[i] == &#39;1&#39;) b0[b1] = i, b1++; } if (a1 == a &amp;amp;&amp;amp; b1 == b) printf(&amp;quot;0\n%s\n&amp;quot;, s); else if (a+b&amp;gt;n) printf(&amp;quot;-1\n&amp;quot;); else { int cnt = 0, a2 = 0, b2 = 0; a2 = a1-a, b2 = b1-b; if (a1 &amp;lt; a) { for (int f = 0; f &amp;lt; b2 &amp;amp;&amp;amp; a1 &amp;lt; a; ++f) s[b0[f]] = &#39;0&#39;, cnt++, a1++, b1--; if (a1 &amp;lt; a) { for (int e = 0; e &amp;lt; n &amp;amp;&amp;amp; a1 &amp;lt; a; ++e) if (s[e] == &#39;2&#39;) s[e] = &#39;0&#39;, cnt++, a1++; } } if (b1 &amp;lt; b) { for (int f = 0; f &amp;lt; a2 &amp;amp;&amp;amp; b1 &amp;lt; b; ++f) s[a0[f]] = &#39;1&#39;, cnt++, b1++, a1--; if (b1 &amp;lt; b) { for (int e = 0; e &amp;lt; n &amp;amp;&amp;amp; b1&amp;lt;b; ++e) if (s[e] == &#39;2&#39;) s[e] = &#39;1&#39;, cnt++, b1++; } } if (a1 &amp;gt; a) { for (int f = 0; f &amp;lt; n &amp;amp;&amp;amp; a1 &amp;gt; a; ++f) if (s[f] == &#39;0&#39;) a1--, s[f] = &#39;2&#39;, cnt++; } if (b1 &amp;gt; b) { for (int f = 0; f &amp;lt; n &amp;amp;&amp;amp; b1 &amp;gt; b; ++f) if (s[f] == &#39;1&#39;) b1--, s[f] = &#39;2&#39;, cnt++; } printf(&amp;quot;%d\n%s\n&amp;quot;, cnt, s); } } return 0; }  只是我的方法貌似比较笨＝＝</description>
    </item>
    
    <item>
      <title>sgu551 Preparing Problem</title>
      <link>http://liuxueyang.github.io/blog/2013/07/18/sgu551-preparing-problem/</link>
      <pubDate>Thu, 18 Jul 2013 17:39:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2013/07/18/sgu551-preparing-problem/</guid>
      <description>题目链接：http://acm.sgu.ru/problem.php?contest=0&amp;amp;problem=551 呵呵，题目读的没错，可惜理解错了．．＝＝
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; #define LL long long using namespace std; int n, t1, t2; int gcd(int a, int b) { return b == 0 ? a : (gcd(b, a%b)); } int exg(int a, int b) { return a/gcd(a,b)*b; } int main(void) { //freopen(&amp;quot;in.txt&amp;quot;, &amp;quot;r&amp;quot;, stdin); while (~scanf(&amp;quot;%d%d%d&amp;quot;, &amp;amp;n, &amp;amp;t1, &amp;amp;t2)) { int k = exg(t1, t2), s = k/t1 + k/t2, One = n/s, r = n%s, base = One*k, Min = 0, cnt = 0, i, j; if (t1&amp;gt;t2) swap(t1,t2); //printf(&amp;quot;s = %d r = %d\n&amp;quot;, s, r); if (r) for (i = 1, j = 1; i+j &amp;lt;= s;) { if (cnt &amp;gt;= r) break; if (i * t1 &amp;lt; j * t2) Min=i*t1, i++, cnt++; else if(i*t1 &amp;gt; j*t2) Min=j*t2, j++, cnt++; else Min=j*t2, j++, i++, cnt+=2; if (cnt &amp;gt;= r) break; } if ( (i-1)*t1!</description>
    </item>
    
  </channel>
</rss>