<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usaco on LXY Site</title>
    <link>http://liuxueyang.github.io/tags/usaco/</link>
    <description>Recent content in Usaco on LXY Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright &amp;copy; 2018 (LXY). All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 14 Jul 2013 18:03:00 +0000</lastBuildDate>
    
	<atom:link href="http://liuxueyang.github.io/tags/usaco/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>usaco Milking Cows</title>
      <link>http://liuxueyang.github.io/posts/usaco-milking-cows/</link>
      <pubDate>Sun, 14 Jul 2013 18:03:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/posts/usaco-milking-cows/</guid>
      <description>题目链接：http://cerberus.delos.com:791/usacoprob2?a=bv3dg9ejwKm&amp;amp;S=milk2 这题目不是线段树，直接模拟
/* ID: zypz4571 LANG: C++ TASK: milk2 */ #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; using namespace std; struct Node { int s, t; }a[5002]; bool cmp(const Node &amp;amp;a, const Node &amp;amp;b) { return a.</description>
    </item>
    
    <item>
      <title>usaco Section1.1 Broken Necklace</title>
      <link>http://liuxueyang.github.io/posts/usaco-section1.1-broken-necklace/</link>
      <pubDate>Sun, 14 Jul 2013 11:24:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/posts/usaco-section1.1-broken-necklace/</guid>
      <description>题目链接：http://cerberus.delos.com:790/usacoprob2?a=75WI6aQtaO2&amp;amp;S=beads 1Y这道题目没什么，就是情况多一点，麻烦一点=_=
/* ID: zypz4571 LANG: C++ TASK: beads */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cctype&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;list&amp;gt; #include &amp;lt;map&amp;gt; #define INF 0x3f3f3f3f #define mid int m=(l+r)/2 using namespace std; int main ( int argc, char *argv[] ) { freopen(&amp;quot;beads.</description>
    </item>
    
    <item>
      <title>USACO Friday the Thirteenth ——水题</title>
      <link>http://liuxueyang.github.io/posts/usaco-friday-the-thirteenth-%E6%B0%B4%E9%A2%98/</link>
      <pubDate>Tue, 21 May 2013 14:40:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/posts/usaco-friday-the-thirteenth-%E6%B0%B4%E9%A2%98/</guid>
      <description>题目链接：http://cerberus.delos.com:790/usacoprob2?a=EYxUgMg3whp&amp;amp;S=friday 题目大意： 意思比较简单。求1900年到1900+N年的每个月的13号落在了星期几。输出13号落在一个星期的每一天的次数。 题目思路： 方法一： 有个蔡勒公式： 这个公式可以根据某天的日期，算出这一天是星期几，套用一下就行了。 公式中的符號含義如下： ——选自维基百科 /* ID: zypz457 LANG: C++ TASK: friday */ #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cmath&amp;gt; using namespace std; int n; int cnt[7]; int cal(int y, int m, int d) { int month = m, c; if (month == 1) { month = 13; y--; } else if (month == 2) { month = 14; y--; } else {month = m;} m = month; c = y/100; y = y%100; int ans = (y + y/4 + floor(c/4) -2*c + floor(26*(m+1)/10) + d - 1); ans = (ans%7 + 7) % 7; return ans; } void solve() { scanf(&amp;quot;%d&amp;quot;, &amp;amp;n); memset(cnt, 0, sizeof(cnt)); int y, j, i, month, ans; for (i = 0; i &amp;lt; n; ++i) { y = i + 1900; for (j = 1; j &amp;lt;= 12; ++j) { ans = cal(y, j, 13); cnt[ans]++; } } printf(&amp;quot;%d &amp;quot;, cnt[6]); for (i = 0; i &amp;lt; 5; ++i) printf(&amp;quot;%d &amp;quot;, cnt[i]); printf(&amp;quot;%d\n&amp;quot;, cnt[5]); } int main(void) { freopen(&amp;quot;friday.</description>
    </item>
    
    <item>
      <title>USACO Greedy Gift Givers ——水题</title>
      <link>http://liuxueyang.github.io/posts/usaco-greedy-gift-givers-%E6%B0%B4%E9%A2%98/</link>
      <pubDate>Tue, 21 May 2013 13:05:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/posts/usaco-greedy-gift-givers-%E6%B0%B4%E9%A2%98/</guid>
      <description>题目链接：http://cerberus.delos.com:790/usacoprob2?S=gift1&amp;amp;a=nR34fDHld4J 题目大意：http://blog.sina.com.cn/s/blog_63d0cab00100h1rx.html 赶脚这货考的是英语……
/* ID: zypz457 LANG: C++ TASK: gift1 */ #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;map&amp;gt; using namespace std; int n; map&amp;lt;string, int&amp;gt; mymap; int wei[15][2]; string name[20]; void init() { int i; freopen(&amp;quot;gift1.</description>
    </item>
    
    <item>
      <title>USACO Your Ride Is Here ——水题</title>
      <link>http://liuxueyang.github.io/posts/usaco-your-ride-is-here-%E6%B0%B4%E9%A2%98/</link>
      <pubDate>Tue, 21 May 2013 11:47:00 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/posts/usaco-your-ride-is-here-%E6%B0%B4%E9%A2%98/</guid>
      <description>题目链接：http://cerberus.delos.com:790/usacoprob2?a=nR34fDHld4J&amp;amp;S=ride 人家说USACO的题目适合入门……我还是先刷这个吧…… 这道题目主要是学了一下USACO里面的文件输入输出格式
/* ID: zypz457 TASK: ride LANG: C++ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;fstream&amp;gt; using namespace std; int main(void) { ifstream fin(&amp;quot;ride.</description>
    </item>
    
  </channel>
</rss>