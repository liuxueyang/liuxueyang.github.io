<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on 黑历史</title>
    <link>http://liuxueyang.github.io/tags/ruby/</link>
    <description>Recent content in Ruby on 黑历史</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 Apr 2015 15:36:09 +0000</lastBuildDate>
    
	<atom:link href="http://liuxueyang.github.io/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby implementation of 2048 game</title>
      <link>http://liuxueyang.github.io/blog/2015/04/16/ruby-implementation-of-2048-game/</link>
      <pubDate>Thu, 16 Apr 2015 15:36:09 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2015/04/16/ruby-implementation-of-2048-game/</guid>
      <description>Ruby Implementation of 2048 game
 Played in terminal. Control with arrow keys or vim-keybindings.  #!/usr/bin/ruby require &amp;quot;io/console&amp;quot; mar = Array.new(16, 0) # sheet value array $score = 0 $target = 2048 $pieces = 0 def operate(mar, ran, gap) mark = false ran.each { |index| ar = index.step(index + 3 * gap, gap).collect { |ind| ind} tm_ar = ar.collect{|ie| mar[ie]} pre_tm_ar = tm_ar.clone tm_ar.delete_if{|item| item == 0} (0..(tm_ar.size-1)).each {|ie| if tm_ar[ie] == tm_ar[ie+1] tm_ar[ie] *= 2 $score += tm_ar[ie] tm_ar[ie+1] = 0 end } tm_ar.</description>
    </item>
    
    <item>
      <title>rename files in ruby</title>
      <link>http://liuxueyang.github.io/blog/2015/04/15/rename-files-in-ruby/</link>
      <pubDate>Wed, 15 Apr 2015 15:34:11 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2015/04/15/rename-files-in-ruby/</guid>
      <description>我有下面的文件：
/home/aries/Music/LuoJi/罗辑思维第三季第7期：统一是怎样炼成的_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第4期：谁绑架了团结_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第2期：大清帝国的生死时速_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第6期：人类灭绝的一种可能_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第3期：坏国王的遗产_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第5期：秦始皇在隐瞒什么_鸿新网www.hhxin.com整理.mp3 /home/aries/Music/LuoJi/罗辑思维第三季第1期：大门口的野蛮人_鸿新网www.hhxin.com整理.mp3  我想要重命名这些文件，使文件名更明了，更方便在我的MP3上查看，所以，我写了如下简单的ruby脚本：
#!/usr/bin/ruby require &amp;quot;fileutils&amp;quot; def ren(path) Dir.glob(&amp;quot;#{path}/*.mp3&amp;quot;).each do |name| process_file(name) end end def process_file(name) filename = File.basename(name) filename =~ /(.*)(\d.*)_.*(\.mp3)/ FileUtils.mv(name, File.join(File.dirname(name), $2 + $3)) end ren(&amp;quot;/home/aries/Music/LuoJi&amp;quot;)  下面是重命名之后的结果：
/home/aries/Music/LuoJi/3期：坏国王的遗产.mp3 /home/aries/Music/LuoJi/4期：谁绑架了团结.mp3 /home/aries/Music/LuoJi/1期：大门口的野蛮人.mp3 /home/aries/Music/LuoJi/2期：大清帝国的生死时速.mp3 /home/aries/Music/LuoJi/7期：统一是怎样炼成的.mp3 /home/aries/Music/LuoJi/5期：秦始皇在隐瞒什么.mp3 /home/aries/Music/LuoJi/6期：人类灭绝的一种可能.mp3  </description>
    </item>
    
    <item>
      <title>block example in Ruby</title>
      <link>http://liuxueyang.github.io/blog/2015/04/12/block-example-in-ruby/</link>
      <pubDate>Sun, 12 Apr 2015 15:33:16 +0000</pubDate>
      
      <guid>http://liuxueyang.github.io/blog/2015/04/12/block-example-in-ruby/</guid>
      <description>这几天看Ruby，挺有意思的，比如Block的用法：
#!/usr/bin/ruby def total2(from, to, &amp;amp;block) result = 0 from.upto(to) do |num| if block result += block.call(num) else result += num end end return result end p total2(1, 10) p total2(1, 10) {|num| num * 2} p total2(1, 10) {|num| num ** 2}  上面的三个输出分别是
55 110 385  函数total2中的第三个传递块的参数叫做Proc参数</description>
    </item>
    
  </channel>
</rss>